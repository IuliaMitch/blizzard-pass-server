generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Gender {
  id        String   @id @default(uuid())
  name      String @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("gender")
   game GendersGames[]
}

model Games {
  id                 String   @id @default(uuid())
  title              String   @unique
  description        String
  year               Int
  imdbScore          Float
  trailerYoutubeUrl  String
  gameplayYoutubeUrl String
  coverImageUrl      String
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  @@map("games")
  game GendersGames[]
  games ProfileGames[]
}

model User {
  id String @id @default(uuid())
  name String
  nickname String @unique
  email String @unique
  password String
  cpf String @unique
  isAdmin Boolean?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user")
  profiles Profile[]
}

model Profile {
  id String @id @default(uuid())


  title String
  imageUrl String
  user User @relation(fields: [userId], references: [id])
  userId String @map("user_id")


   profiles ProfileGames[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("profile")
}

model GendersGames {
  id String @id @default(uuid())
  genders Gender @relation(fields: [gendersId], references: [id])
  gendersId String
  game Games @relation(fields: [gameId], references: [id])
  gameId String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model ProfileGames {
  id String @id @default(uuid())
  profile Profile @relation(fields: [profileId], references: [id])
  profileId String
  games Games @relation(fields: [gamesId], references: [id])
  gamesId String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}
